{"version":3,"file":"component---src-pages-index-js-0067155f7165d4d80eda.js","mappings":"yIA2CA,IAxCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADcC,mBACDJ,EAASK,SAC5B,IAAIC,EA2BJ,OAxBEA,EADEH,EAEA,gCACE,sBAAII,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KACNR,EACD,wBAAMS,MAAO,CACXC,SAAU,UACVC,WAAY,YACX,qBAGP,2BACA,yBAAG,QAED,qBAAGC,KAAK,aAAY,OAAO,OAM/B,gBAAC,EAAAL,KAAI,CAACC,GAAG,IAAIF,UAAU,oBAAqBN,GAK9C,uBAAKM,UAAU,iBAAiB,oBAAmBJ,GACjD,0BAAQI,UAAU,iBAAiBD,GACnC,4BAAOJ,GACP,2BACA,0BAAQQ,MAAO,CAAEI,UAAW,WAAY,MAAQ,IAAIC,MAAOC,cAAc,wBACrE,C,+CCaV,IA1CY,IAAgC,IAAD,UAA9B,MAAEf,EAAK,KAAEgB,EAAI,SAAEf,GAAU,EACpC,MAAM,KAAEgB,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAA2B,QAApB,EAAGF,EAAKG,oBAAY,aAAjB,EAAmBD,QAC7BE,EAAO,GAAMF,EAAUH,EACvBM,EAAYH,EAAO,KAAIH,EAAI,SAAYA,EAAKO,MAAM,GAAI,GAAE,OAAU,OAClEC,EAAYR,EAAUhB,EAAK,OAAuB,QAAvB,EAAMiB,EAAKG,oBAAY,aAAjB,EAAmBpB,OAA2B,QAAtB,EAAKiB,EAAKG,oBAAY,aAAjB,EAAmBpB,MAGvF,OADAyB,QAAQC,IAAIJ,GAEV,gCACE,wBAAMK,OAAO,2BACb,6BAAQH,GACR,wBAAMI,IAAI,OAAOhB,KAASO,EAAO,iBACjC,wBAAMU,KAAK,cAAcC,QAASb,EAAKG,aAAaW,cACpD,wBAAMC,SAAS,WAAWF,QAASN,IACnC,wBAAMQ,SAAS,UAAUF,QAAQ,YACjC,wBAAME,SAAS,WAAWF,QAASR,IACnC,wBAAMU,SAAS,SAASF,QAAST,IACjC,wBAAMW,SAAS,iBAAiBF,QAASb,EAAKG,aAAaW,cAC3D,wBAAMF,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAASR,IACnCrB,EACA,C,6GCIP,UA9CkB,IAAyB,IAAD,MAAvB,KAAEgC,EAAI,SAAElC,GAAU,EACnC,MAAMmC,GAAkC,QAAtB,EAAAD,EAAKhB,KAAKG,oBAAY,aAAtB,EAAwBpB,QAAK,QACzCmC,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACvC,SAAUA,EAAUC,MAAOkC,GACjC,yBAAG,uJAUP,gBAAC,IAAM,CAACnC,SAAUA,EAAUC,MAAOkC,GACjC,sBAAIzB,MAAO,CAAE8B,UAAU,SACpBJ,EAAMK,KAAIC,IACT,MAAMzC,EAAQyC,EAAKC,YAAY1C,OAASyC,EAAKE,OAAO3B,KAEpD,OACE,sBAAI4B,IAAKH,EAAKE,OAAO3B,MACnB,2BACEV,UAAU,iBACVuC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAvC,KAAI,CAACC,GAAIiC,EAAKE,OAAO3B,KAAM+B,SAAS,OACnC,wBAAMA,SAAS,YAAY/C,KAG/B,6BAAQyC,EAAKC,YAAYM,QAG1B,KAIJ,EAWN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAACjD,MAAM,YAAYgB,KAAK,I","sources":["webpack://weekly-notes/./src/components/layout.js","webpack://weekly-notes/./src/components/seo.js","webpack://weekly-notes/./src/pages/index.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <>\n        <h2 className=\"main-heading\">\n          <Link to=\"/\">\n            {title}\n            <span style={{\n              fontSize: \"smaller\",\n              fontWeight: \"lighter\"\n            }}> - chonai-flora</span>\n          </Link>\n        </h2>\n        <br />\n        <p>\n          週記です。\n          <a href=\"archives/\">こちら</a>も。\n        </p>\n      </>\n    )\n  } else {\n    header = (\n      <Link to=\"/\" className=\"header-link-home\" >{title}</Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <hr />\n      <footer style={{ textAlign: \"center\" }}>&copy; {new Date().getFullYear()}, Build with Gatsby </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ title, slug, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const siteUrl = site.siteMetadata?.siteUrl\n  const metaUrl = `${siteUrl}${slug}`\n  const ogpSrc = `${siteUrl}/${slug ? `images${slug.slice(0, -1)}` : `ogp`}.png`\n  const metaTitle = slug ? `${title} | ${site.siteMetadata?.title}` : site.siteMetadata?.title\n\n  console.log(ogpSrc)\n  return (\n    <>\n      <head prefix=\"og: https://ogp.me/ns#\" />\n      <title>{metaTitle}</title>\n      <link rel=\"icon\" href={`${siteUrl}/favicon.ico`} />\n      <meta name=\"description\" content={site.siteMetadata.description} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={ogpSrc} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:description\" content={site.siteMetadata.description} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:image\" content={ogpSrc} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"notes\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All notes\" slug=\"\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      pathPrefix\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","className","Link","to","style","fontSize","fontWeight","href","textAlign","Date","getFullYear","slug","site","useStaticQuery","siteUrl","siteMetadata","metaUrl","ogpSrc","slice","metaTitle","console","log","prefix","rel","name","content","description","property","data","siteTitle","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","key","itemScope","itemType","itemProp","date","Head"],"sourceRoot":""}