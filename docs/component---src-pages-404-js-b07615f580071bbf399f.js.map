{"version":3,"file":"component---src-pages-404-js-b07615f580071bbf399f.js","mappings":"yIAoCA,IAjCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAoBJ,OAjBEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KACNP,EACD,wBAAMQ,MAAO,CACXC,SAAU,UACVC,WAAY,YACX,qBAMP,gBAAC,EAAAJ,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KAAKP,GAK7C,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,2BACA,0BAAQO,MAAO,CAAEG,UAAW,WAAY,MAAQ,IAAIC,MAAOC,cAAc,wBACrE,C,+CCkBV,IAxCY,IAAgC,IAAD,UAA9B,MAAEb,EAAK,KAAEc,EAAI,SAAEb,GAAU,EACpC,MAAM,KAAEc,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAA2B,QAApB,EAAGF,EAAKG,oBAAY,aAAjB,EAAmBD,QAC7BE,EAAO,GAAMF,EAAUH,EACvBM,EAAsB,cAAVpB,EAAyC,QAApB,EAAGe,EAAKG,oBAAY,aAAjB,EAAmBlB,MAAWA,EAAK,OAAuB,QAAvB,EAAMe,EAAKG,oBAAY,aAAjB,EAAmBlB,OAEtG,OACE,gCACE,wBAAMqB,OAAO,2BACb,6BAAQD,GACR,wBAAME,IAAI,OAAOC,KAASN,EAAO,iBACjC,wBAAMO,KAAK,cAAcC,QAASV,EAAKG,aAAaQ,cACpD,wBAAMC,SAAS,WAAWF,QAASL,IACnC,wBAAMO,SAAS,UAAUF,QAAQ,YACjC,wBAAME,SAAS,WAAWF,QAAYR,EAAO,aAC7C,wBAAMU,SAAS,SAASF,QAASN,IACjC,wBAAMQ,SAAS,iBAAiBF,QAASV,EAAKG,aAAaQ,cAC3D,wBAAMF,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAAYR,EAAO,aAC7ChB,EACA,C,kGCxCP,MAWa2B,EAAO,IAAM,gBAAC,IAAG,CAAC5B,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAE6B,EAAI,SAAE9B,GAAU,EACtC,MAAM+B,EAAYD,EAAKd,KAAKG,aAAalB,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO8B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://weekly-notes/./src/components/layout.js","webpack://weekly-notes/./src/components/seo.js","webpack://weekly-notes/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h2 className=\"main-heading\">\n        <Link to=\"/\">\n          {title}\n          <span style={{\n            fontSize: \"smaller\",\n            fontWeight: \"lighter\"\n          }}> - chonai-flora</span>\n          </Link>\n      </h2>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">{title}</Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <hr />\n      <footer style={{ textAlign: \"center\" }}>&copy; {new Date().getFullYear()}, Build with Gatsby </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ title, slug, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const siteUrl = site.siteMetadata?.siteUrl\n  const metaUrl = `${siteUrl}${slug}`\n  const metaTitle = title === \"All notes\" ? site.siteMetadata?.title : `${title} | ${site.siteMetadata?.title}`\n\n  return (\n    <>\n      <head prefix=\"og: https://ogp.me/ns#\" />\n      <title>{metaTitle}</title>\n      <link rel=\"icon\" href={`${siteUrl}/favicon.ico`} />\n      <meta name=\"description\" content={site.siteMetadata.description} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={`${siteUrl}/ogp.png`} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:description\" content={site.siteMetadata.description} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:image\" content={`${siteUrl}/ogp.png`} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","style","fontSize","fontWeight","textAlign","Date","getFullYear","slug","site","useStaticQuery","siteUrl","siteMetadata","metaUrl","metaTitle","prefix","rel","href","name","content","description","property","Head","data","siteTitle"],"sourceRoot":""}