{"version":3,"file":"component---src-pages-index-js-8bdca6e6dd0163059c04.js","mappings":"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","sources":["webpack://weekly-notes/./gatsby-config.js","webpack://weekly-notes/./src/components/layout.js","webpack://weekly-notes/./src/components/seo.js","webpack://weekly-notes/./src/pages/index.js"],"sourcesContent":["/**\n * Configure your Gatsby site with this file.\n *\n * See: https://www.gatsbyjs.com/docs/reference/config-files/gatsby-config/\n */\n\n/**\n * @type {import('gatsby').GatsbyConfig}\n */\nmodule.exports = {\n  pathPrefix: `/weekly-notes`,\n  siteMetadata: {\n    title: `週記`,\n    author: {\n      name: `chonai-flora`\n    },\n    description: `Weekly notes by chonai-flora`,\n    siteUrl: `https://chonai-flora.github.io/weekly-notes`,\n    social: {\n      twitter: ``,\n    },\n  },\n  plugins: [\n    `gatsby-plugin-image`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        path: `${__dirname}/notes`,\n        name: `note`,\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          {\n            resolve: `gatsby-remark-images`,\n            options: {\n              maxWidth: 630,\n            },\n          },\n          {\n            resolve: `gatsby-remark-responsive-iframe`,\n            options: {\n              wrapperStyle: `margin-bottom: 1.0725rem`,\n            },\n          },\n          `gatsby-remark-prismjs`,\n        ],\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    {\n      resolve: `gatsby-plugin-feed`,\n      options: {\n        query: `\n          {\n            site {\n              siteMetadata {\n                title\n                description\n                siteUrl\n                site_url: siteUrl\n              }\n            }\n          }\n        `,\n        feeds: [\n          {\n            serialize: ({ query: { site, allMarkdownRemark } }) => {\n              return allMarkdownRemark.nodes.map(node => {\n                return Object.assign({}, node.frontmatter, {\n                  description: node.excerpt,\n                  date: node.frontmatter.date,\n                  url: site.siteMetadata.siteUrl + node.fields.slug,\n                  guid: site.siteMetadata.siteUrl + node.fields.slug,\n                  custom_elements: [{ \"content:encoded\": node.html }],\n                })\n              })\n            },\n            query: `{\n              allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n                nodes {\n                  excerpt\n                  html\n                  fields {\n                    slug\n                  }\n                  frontmatter {\n                    title\n                    date\n                  }\n                }\n              }\n            }`,\n            output: \"/rss.xml\",\n            title: \"Gatsby Starter Blog RSS Feed\",\n          },\n        ],\n      },\n    },\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: `Gatsby Starter Blog`,\n        short_name: `Gatsby`,\n        start_url: `/`,\n        background_color: `#ffffff`,\n        // This will impact how browsers show your PWA/website\n        // https://css-tricks.com/meta-theme-color-and-trickery/\n        // theme_color: `#663399`,\n        display: `minimal-ui`,\n        icon: `src/images/gatsby-icon.png`, // This path is relative to the root of the site.\n      },\n    },\n  ],\n}\n","import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nimport { pathPrefix } from \"../../gatsby-config\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <>\n        <h2 className=\"main-heading\">\n          <Link to={pathPrefix}>\n            {title}\n            <span style={{\n              fontSize: \"smaller\",\n              fontWeight: \"lighter\"\n            }}> - chonai-flora</span>\n          </Link>\n        </h2>\n        <br />\n        <p>\n          週記です。\n          <a href=\"archives/\">こちら</a>も。\n        </p>\n      </>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to={pathPrefix}>{title}</Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <hr />\n      <footer style={{ textAlign: \"center\" }}>&copy; {new Date().getFullYear()}, Build with Gatsby </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ title, slug, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const siteUrl = site.siteMetadata?.siteUrl\n  const metaUrl = `${siteUrl}${slug}`\n  const ogpSrc = `${siteUrl}/${slug ? `images${slug.slice(0, -1)}` : `ogp`}.png`\n  const metaTitle = slug ? `${title} | ${site.siteMetadata?.title}` : site.siteMetadata?.title\n\n  return (\n    <>\n      <head prefix=\"og: https://ogp.me/ns#\" />\n      <title>{metaTitle}</title>\n      <link rel=\"icon\" href={`${siteUrl}/favicon.ico`} />\n      <meta name=\"description\" content={site.siteMetadata.description} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={ogpSrc} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:description\" content={site.siteMetadata.description} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:image\" content={ogpSrc} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"notes\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={`${data.site.pathPrefix}${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All notes\" slug=\"\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      pathPrefix\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["module","exports","pathPrefix","siteMetadata","title","author","name","description","siteUrl","social","twitter","plugins","resolve","options","path","__dirname","maxWidth","wrapperStyle","query","feeds","serialize","site","allMarkdownRemark","nodes","map","node","Object","assign","frontmatter","excerpt","date","url","fields","slug","guid","custom_elements","html","output","short_name","start_url","background_color","display","icon","location","children","isRootPath","pathname","header","className","Link","to","style","fontSize","fontWeight","href","textAlign","Date","getFullYear","useStaticQuery","metaUrl","ogpSrc","slice","metaTitle","prefix","rel","content","property","data","siteTitle","posts","length","listStyle","post","key","itemScope","itemType","itemProp","Head"],"sourceRoot":""}